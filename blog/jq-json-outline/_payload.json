[{"data":1,"prerenderedAt":900},["ShallowReactive",2],{"article":3,"articles-100":811,"articles-10":879},{"id":4,"title":5,"alt":6,"body":7,"date":794,"description":795,"extension":796,"head":794,"image":797,"meta":798,"navigation":799,"ogImage":794,"path":800,"postDate":801,"provider":794,"published":802,"robots":794,"schemaOrg":794,"seo":803,"sitemap":804,"stem":805,"tags":806,"url":794,"__hash__":810},"blog/blog/jq-json-outline.md","Quickly Outline Large JSON Responses with a Custom jq Function","Abstract image representing the essence of json structure",{"type":8,"value":9,"toc":786},"minimark",[10,14,34,37,42,45,129,132,136,139,375,382,386,389,447,450,635,642,646,649,716,720,723,744,747,775,779,782],[11,12,13],"p",{},"I was recently digging into Immich’s API to see if it provides the fields I needed to get some specific information about my photos. Immich is my self-hosted photo-management service. The API response returned hundreds of lines of JSON data. I just wanted to see its structure to verify the fields I needed, but scrolling through so much data felt time-consuming. So I did what any sane programmer would do. I spent even more time trying to figure out how I could do it in an automated way.",[11,15,16,17,24,25,29,30,33],{},"I’ve used ",[18,19,23],"a",{"href":20,"rel":21},"https://jqlang.org/",[22],"nofollow","jq"," before for quick JSON tweaks (it’s basically ",[26,27,28],"code",{},"sed"," or ",[26,31,32],{},"awk"," for JSON), so I wondered if it could help here. A bit of searching showed that jq can collapse arrays to a single-item preview and then recurse through the entire document, giving you a clean outline of the JSON’s shape in one pass.",[11,35,36],{},"I later found out that the response structures are already specified in the Immich API documentation. So I could have just looked that up and saved myself all the hassle. But hey, it could well have been an API endpoint without any documentation and the method that I came up with is general enough to be used in any API JSON response.",[38,39,41],"h2",{"id":40},"the-jq-function","The jq function",[11,43,44],{},"Here’s the jq function I came up with which can be run in a terminal:",[46,47,52],"pre",{"className":48,"code":49,"language":50,"meta":51,"style":51},"language-bash shiki shiki-themes github-light github-dark","jq '\ndef shape:\n  if type == \"array\" then\n    if length > 0 then [ (.[0] | shape) ] else [] end\n  elif type == \"object\" then\n    with_entries(.value |= shape)\n  else\n    type\n  end;\nshape\n' response.json\n","bash","",[26,53,54,66,72,78,84,90,96,102,108,114,120],{"__ignoreMap":51},[55,56,59,62],"span",{"class":57,"line":58},"line",1,[55,60,23],{"class":61},"sScJk",[55,63,65],{"class":64},"sZZnC"," '\n",[55,67,69],{"class":57,"line":68},2,[55,70,71],{"class":64},"def shape:\n",[55,73,75],{"class":57,"line":74},3,[55,76,77],{"class":64},"  if type == \"array\" then\n",[55,79,81],{"class":57,"line":80},4,[55,82,83],{"class":64},"    if length > 0 then [ (.[0] | shape) ] else [] end\n",[55,85,87],{"class":57,"line":86},5,[55,88,89],{"class":64},"  elif type == \"object\" then\n",[55,91,93],{"class":57,"line":92},6,[55,94,95],{"class":64},"    with_entries(.value |= shape)\n",[55,97,99],{"class":57,"line":98},7,[55,100,101],{"class":64},"  else\n",[55,103,105],{"class":57,"line":104},8,[55,106,107],{"class":64},"    type\n",[55,109,111],{"class":57,"line":110},9,[55,112,113],{"class":64},"  end;\n",[55,115,117],{"class":57,"line":116},10,[55,118,119],{"class":64},"shape\n",[55,121,123,126],{"class":57,"line":122},11,[55,124,125],{"class":64},"'",[55,127,128],{"class":64}," response.json\n",[11,130,131],{},"It checks the type of each value: if it's an array, keep just the first item and recurse. If it's an object, walk through each key and recurse into the value. If it's a primitive like a string or number, just return the type name.",[38,133,135],{"id":134},"actual-immich-api-shape","Actual Immich API Shape",[11,137,138],{},"Here's a simplified output of the jq function applied to the Immich API response:",[46,140,144],{"className":141,"code":142,"language":143,"meta":51,"style":51},"language-json shiki shiki-themes github-light github-dark","{\n  \"albums\": {\n    \"count\": \"number\",\n    ...\n  },\n  \"assets\": {\n    \"count\": \"number\",\n    \"facets\": [],\n    \"items\": [\n      {\n        ...\n        \"duration\": \"string\",\n        \"exifInfo\": {\n          \"city\": \"string\",\n          \"country\": \"string\",\n          ...\n        },\n        \"fileCreatedAt\": \"string\",\n        \"fileModifiedAt\": \"string\",\n        \"hasMetadata\": \"boolean\",\n        ...\n      }\n    ],\n    \"nextPage\": \"string\",\n    \"total\": \"number\"\n  }\n}\n","json",[26,145,146,152,161,175,181,186,193,203,211,219,224,229,242,250,262,274,280,286,298,310,323,328,334,340,352,363,369],{"__ignoreMap":51},[55,147,148],{"class":57,"line":58},[55,149,151],{"class":150},"sVt8B","{\n",[55,153,154,158],{"class":57,"line":68},[55,155,157],{"class":156},"sj4cs","  \"albums\"",[55,159,160],{"class":150},": {\n",[55,162,163,166,169,172],{"class":57,"line":74},[55,164,165],{"class":156},"    \"count\"",[55,167,168],{"class":150},": ",[55,170,171],{"class":64},"\"number\"",[55,173,174],{"class":150},",\n",[55,176,177],{"class":57,"line":80},[55,178,180],{"class":179},"s7hpK","    ...\n",[55,182,183],{"class":57,"line":86},[55,184,185],{"class":150},"  },\n",[55,187,188,191],{"class":57,"line":92},[55,189,190],{"class":156},"  \"assets\"",[55,192,160],{"class":150},[55,194,195,197,199,201],{"class":57,"line":98},[55,196,165],{"class":156},[55,198,168],{"class":150},[55,200,171],{"class":64},[55,202,174],{"class":150},[55,204,205,208],{"class":57,"line":104},[55,206,207],{"class":156},"    \"facets\"",[55,209,210],{"class":150},": [],\n",[55,212,213,216],{"class":57,"line":110},[55,214,215],{"class":156},"    \"items\"",[55,217,218],{"class":150},": [\n",[55,220,221],{"class":57,"line":116},[55,222,223],{"class":150},"      {\n",[55,225,226],{"class":57,"line":122},[55,227,228],{"class":179},"        ...\n",[55,230,232,235,237,240],{"class":57,"line":231},12,[55,233,234],{"class":156},"        \"duration\"",[55,236,168],{"class":150},[55,238,239],{"class":64},"\"string\"",[55,241,174],{"class":150},[55,243,245,248],{"class":57,"line":244},13,[55,246,247],{"class":156},"        \"exifInfo\"",[55,249,160],{"class":150},[55,251,253,256,258,260],{"class":57,"line":252},14,[55,254,255],{"class":156},"          \"city\"",[55,257,168],{"class":150},[55,259,239],{"class":64},[55,261,174],{"class":150},[55,263,265,268,270,272],{"class":57,"line":264},15,[55,266,267],{"class":156},"          \"country\"",[55,269,168],{"class":150},[55,271,239],{"class":64},[55,273,174],{"class":150},[55,275,277],{"class":57,"line":276},16,[55,278,279],{"class":179},"          ...\n",[55,281,283],{"class":57,"line":282},17,[55,284,285],{"class":150},"        },\n",[55,287,289,292,294,296],{"class":57,"line":288},18,[55,290,291],{"class":156},"        \"fileCreatedAt\"",[55,293,168],{"class":150},[55,295,239],{"class":64},[55,297,174],{"class":150},[55,299,301,304,306,308],{"class":57,"line":300},19,[55,302,303],{"class":156},"        \"fileModifiedAt\"",[55,305,168],{"class":150},[55,307,239],{"class":64},[55,309,174],{"class":150},[55,311,313,316,318,321],{"class":57,"line":312},20,[55,314,315],{"class":156},"        \"hasMetadata\"",[55,317,168],{"class":150},[55,319,320],{"class":64},"\"boolean\"",[55,322,174],{"class":150},[55,324,326],{"class":57,"line":325},21,[55,327,228],{"class":179},[55,329,331],{"class":57,"line":330},22,[55,332,333],{"class":150},"      }\n",[55,335,337],{"class":57,"line":336},23,[55,338,339],{"class":150},"    ],\n",[55,341,343,346,348,350],{"class":57,"line":342},24,[55,344,345],{"class":156},"    \"nextPage\"",[55,347,168],{"class":150},[55,349,239],{"class":64},[55,351,174],{"class":150},[55,353,355,358,360],{"class":57,"line":354},25,[55,356,357],{"class":156},"    \"total\"",[55,359,168],{"class":150},[55,361,362],{"class":64},"\"number\"\n",[55,364,366],{"class":57,"line":365},26,[55,367,368],{"class":150},"  }\n",[55,370,372],{"class":57,"line":371},27,[55,373,374],{"class":150},"}\n",[11,376,377,378,381],{},"Now I instantly see that ",[26,379,380],{},"assets.items[i].exifInfo.country"," is a string—exactly what I needed to know to map photos by country.",[38,383,385],{"id":384},"extending-it-for-sample-values","Extending It for Sample Values",[11,387,388],{},"Next, I wondered: what if I wanted real examples, not just types? I modified the primitive case to return the value itself:",[46,390,392],{"className":48,"code":391,"language":50,"meta":51,"style":51},"jq '\ndef shape_with_samples:\n  if type == \"array\" then\n    if length > 0 then [ (.[0] | shape_with_samples) ] else [] end\n  elif type == \"object\" then\n    with_entries(.value |= shape_with_samples)\n  else\n    .\n  end;\nshape_with_samples\n' response.json\n",[26,393,394,400,405,409,414,418,423,427,432,436,441],{"__ignoreMap":51},[55,395,396,398],{"class":57,"line":58},[55,397,23],{"class":61},[55,399,65],{"class":64},[55,401,402],{"class":57,"line":68},[55,403,404],{"class":64},"def shape_with_samples:\n",[55,406,407],{"class":57,"line":74},[55,408,77],{"class":64},[55,410,411],{"class":57,"line":80},[55,412,413],{"class":64},"    if length > 0 then [ (.[0] | shape_with_samples) ] else [] end\n",[55,415,416],{"class":57,"line":86},[55,417,89],{"class":64},[55,419,420],{"class":57,"line":92},[55,421,422],{"class":64},"    with_entries(.value |= shape_with_samples)\n",[55,424,425],{"class":57,"line":98},[55,426,101],{"class":64},[55,428,429],{"class":57,"line":104},[55,430,431],{"class":64},"    .\n",[55,433,434],{"class":57,"line":110},[55,435,113],{"class":64},[55,437,438],{"class":57,"line":116},[55,439,440],{"class":64},"shape_with_samples\n",[55,442,443,445],{"class":57,"line":122},[55,444,125],{"class":64},[55,446,128],{"class":64},[11,448,449],{},"Now I get sample data like:",[46,451,453],{"className":141,"code":452,"language":143,"meta":51,"style":51},"{\n  \"albums\": {\n    \"count\": 10,\n    ...\n  },\n  \"assets\": {\n    \"count\": 25,\n    \"facets\": [],\n    \"items\": [\n      {\n        ...\n        \"duration\": \"00:00:05\",\n        \"exifInfo\": {\n          \"city\": \"Zurich\",\n          \"country\": \"Switzerland\"\n        },\n        \"fileCreatedAt\": \"2025-09-01T10:00:00Z\",\n        \"fileModifiedAt\": \"2025-09-01T10:05:00Z\",\n        \"hasMetadata\": true,\n        ...\n      }\n    ],\n    \"nextPage\": \"2\",\n    \"total\": 25\n  }\n}\n",[26,454,455,459,465,476,480,484,490,501,507,513,517,521,532,538,549,558,562,573,584,595,599,603,607,618,627,631],{"__ignoreMap":51},[55,456,457],{"class":57,"line":58},[55,458,151],{"class":150},[55,460,461,463],{"class":57,"line":68},[55,462,157],{"class":156},[55,464,160],{"class":150},[55,466,467,469,471,474],{"class":57,"line":74},[55,468,165],{"class":156},[55,470,168],{"class":150},[55,472,473],{"class":156},"10",[55,475,174],{"class":150},[55,477,478],{"class":57,"line":80},[55,479,180],{"class":179},[55,481,482],{"class":57,"line":86},[55,483,185],{"class":150},[55,485,486,488],{"class":57,"line":92},[55,487,190],{"class":156},[55,489,160],{"class":150},[55,491,492,494,496,499],{"class":57,"line":98},[55,493,165],{"class":156},[55,495,168],{"class":150},[55,497,498],{"class":156},"25",[55,500,174],{"class":150},[55,502,503,505],{"class":57,"line":104},[55,504,207],{"class":156},[55,506,210],{"class":150},[55,508,509,511],{"class":57,"line":110},[55,510,215],{"class":156},[55,512,218],{"class":150},[55,514,515],{"class":57,"line":116},[55,516,223],{"class":150},[55,518,519],{"class":57,"line":122},[55,520,228],{"class":179},[55,522,523,525,527,530],{"class":57,"line":231},[55,524,234],{"class":156},[55,526,168],{"class":150},[55,528,529],{"class":64},"\"00:00:05\"",[55,531,174],{"class":150},[55,533,534,536],{"class":57,"line":244},[55,535,247],{"class":156},[55,537,160],{"class":150},[55,539,540,542,544,547],{"class":57,"line":252},[55,541,255],{"class":156},[55,543,168],{"class":150},[55,545,546],{"class":64},"\"Zurich\"",[55,548,174],{"class":150},[55,550,551,553,555],{"class":57,"line":264},[55,552,267],{"class":156},[55,554,168],{"class":150},[55,556,557],{"class":64},"\"Switzerland\"\n",[55,559,560],{"class":57,"line":276},[55,561,285],{"class":150},[55,563,564,566,568,571],{"class":57,"line":282},[55,565,291],{"class":156},[55,567,168],{"class":150},[55,569,570],{"class":64},"\"2025-09-01T10:00:00Z\"",[55,572,174],{"class":150},[55,574,575,577,579,582],{"class":57,"line":288},[55,576,303],{"class":156},[55,578,168],{"class":150},[55,580,581],{"class":64},"\"2025-09-01T10:05:00Z\"",[55,583,174],{"class":150},[55,585,586,588,590,593],{"class":57,"line":300},[55,587,315],{"class":156},[55,589,168],{"class":150},[55,591,592],{"class":156},"true",[55,594,174],{"class":150},[55,596,597],{"class":57,"line":312},[55,598,228],{"class":179},[55,600,601],{"class":57,"line":325},[55,602,333],{"class":150},[55,604,605],{"class":57,"line":330},[55,606,339],{"class":150},[55,608,609,611,613,616],{"class":57,"line":336},[55,610,345],{"class":156},[55,612,168],{"class":150},[55,614,615],{"class":64},"\"2\"",[55,617,174],{"class":150},[55,619,620,622,624],{"class":57,"line":342},[55,621,357],{"class":156},[55,623,168],{"class":150},[55,625,626],{"class":156},"25\n",[55,628,629],{"class":57,"line":354},[55,630,368],{"class":150},[55,632,633],{"class":57,"line":365},[55,634,374],{"class":150},[11,636,637,638,641],{},"Seeing ",[26,639,640],{},"\"Switzerland\""," immediately confirmed I was pulling the right field.",[38,643,645],{"id":644},"sampling-multiple-items","Sampling Multiple Items",[11,647,648],{},"When the first asset lacked certain optional tags, I extended the function to sample the first N items:",[46,650,652],{"className":48,"code":651,"language":50,"meta":51,"style":51},"jq '\ndef shape_with_samples(n):\n  if type == \"array\" then\n    if length > 0 then\n      [ .[:n][] | shape_with_samples(n) ]\n    else [] end\n  elif type == \"object\" then\n    with_entries(.value |= shape_with_samples(n))\n  else\n    .\n  end;\nshape_with_samples(3)\n' response.json\n",[26,653,654,660,665,669,674,679,684,688,693,697,701,705,710],{"__ignoreMap":51},[55,655,656,658],{"class":57,"line":58},[55,657,23],{"class":61},[55,659,65],{"class":64},[55,661,662],{"class":57,"line":68},[55,663,664],{"class":64},"def shape_with_samples(n):\n",[55,666,667],{"class":57,"line":74},[55,668,77],{"class":64},[55,670,671],{"class":57,"line":80},[55,672,673],{"class":64},"    if length > 0 then\n",[55,675,676],{"class":57,"line":86},[55,677,678],{"class":64},"      [ .[:n][] | shape_with_samples(n) ]\n",[55,680,681],{"class":57,"line":92},[55,682,683],{"class":64},"    else [] end\n",[55,685,686],{"class":57,"line":98},[55,687,89],{"class":64},[55,689,690],{"class":57,"line":104},[55,691,692],{"class":64},"    with_entries(.value |= shape_with_samples(n))\n",[55,694,695],{"class":57,"line":110},[55,696,101],{"class":64},[55,698,699],{"class":57,"line":116},[55,700,431],{"class":64},[55,702,703],{"class":57,"line":122},[55,704,113],{"class":64},[55,706,707],{"class":57,"line":231},[55,708,709],{"class":64},"shape_with_samples(3)\n",[55,711,712,714],{"class":57,"line":244},[55,713,125],{"class":64},[55,715,128],{"class":64},[38,717,719],{"id":718},"making-it-reusable","Making it reusable",[11,721,722],{},"I will definitely not remember these functions in a month, so I saved them as reusable scripts:",[46,724,726],{"className":48,"code":725,"language":50,"meta":51,"style":51},"~/.jq/shape.jq\n~/.jq/shape_samples.jq\n",[26,727,728,737],{"__ignoreMap":51},[55,729,730,734],{"class":57,"line":58},[55,731,733],{"class":732},"szBVR","~",[55,735,736],{"class":150},"/.jq/shape.jq\n",[55,738,739,741],{"class":57,"line":68},[55,740,733],{"class":732},[55,742,743],{"class":150},"/.jq/shape_samples.jq\n",[11,745,746],{},"Now I can run them anytime via:",[46,748,750],{"className":48,"code":749,"language":50,"meta":51,"style":51},"jq -f ~/.jq/shape.jq response.json\njq -f ~/.jq/shape_with_samples.jq response.json\n",[26,751,752,764],{"__ignoreMap":51},[55,753,754,756,759,762],{"class":57,"line":58},[55,755,23],{"class":61},[55,757,758],{"class":156}," -f",[55,760,761],{"class":64}," ~/.jq/shape.jq",[55,763,128],{"class":64},[55,765,766,768,770,773],{"class":57,"line":68},[55,767,23],{"class":61},[55,769,758],{"class":156},[55,771,772],{"class":64}," ~/.jq/shape_with_samples.jq",[55,774,128],{"class":64},[38,776,778],{"id":777},"conclusion","Conclusion",[11,780,781],{},"It’s a tiny trick, but it makes understanding large JSON responses so much easier. Whenever you are working with any undocumented APIs, jq gives you a fast, lightweight way to map its structure without guesswork.",[783,784,785],"style",{},"html pre.shiki code .sScJk, html code.shiki .sScJk{--shiki-default:#6F42C1;--shiki-dark:#B392F0}html pre.shiki code .sZZnC, html code.shiki .sZZnC{--shiki-default:#032F62;--shiki-dark:#9ECBFF}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html pre.shiki code .sVt8B, html code.shiki .sVt8B{--shiki-default:#24292E;--shiki-dark:#E1E4E8}html pre.shiki code .sj4cs, html code.shiki .sj4cs{--shiki-default:#005CC5;--shiki-dark:#79B8FF}html pre.shiki code .s7hpK, html code.shiki .s7hpK{--shiki-default:#B31D28;--shiki-default-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic}html pre.shiki code .szBVR, html code.shiki .szBVR{--shiki-default:#D73A49;--shiki-dark:#F97583}",{"title":51,"searchDepth":68,"depth":68,"links":787},[788,789,790,791,792,793],{"id":40,"depth":68,"text":41},{"id":134,"depth":68,"text":135},{"id":384,"depth":68,"text":385},{"id":644,"depth":68,"text":645},{"id":718,"depth":68,"text":719},{"id":777,"depth":68,"text":778},null,"Use jq to automatically map and visualize the structure of large JSON responses, perfect for exploring undocumented endpoints.","md","/images/jq-json-structure.png",{},true,"/blog/jq-json-outline","2025-10-19T00:00:00.000Z",false,{"title":5,"description":795},{"loc":800},"blog/jq-json-outline",[23,143,807,808,809],"command line","automation","developer productivity","30S0oaNgHvegxveolvGcEcoSSYnMmJfxHLxeHry4Xbo",[812,814,823,832,838,844,853,860,866,873],{"title":5,"description":795,"tags":813,"postDate":801,"path":800,"url":794},[23,143,807,808,809],{"title":815,"description":816,"tags":817,"postDate":821,"path":822,"url":794},"Why I added RSS feeds to my blog (and how I did it in Nuxt 3)","How I built RSS and Atom feed support for my Nuxt 3 website to let readers follow my content without social media algorithms.",[818,819,820],"nuxt","web development","tutorial","2025-08-31T00:00:00.000Z","/blog/setting-up-rss-atom-feeds-nuxt3",{"title":824,"description":825,"tags":826,"postDate":830,"path":831,"url":794},"Revisiting my Stream Deck for music control","How I turned my neglected Stream Deck into a useful tool for controlling YouTube Music without breaking my workflow.",[827,828,808,829],"productivity","Developer Productivity","home-office","2025-06-07T00:00:00.000Z","/blog/stream-deck-youtube-music",{"title":833,"description":834,"tags":835,"postDate":836,"path":837,"url":794},"fzf + fabric: Smart selection for LLM patterns and models","Enhance your experience with fabric, the AI prompt tool, by using interactive selection for patterns and models.",[809],"2025-05-24T00:00:00.000Z","/blog/ai-pattern-selection-in-fabric",{"title":839,"description":840,"tags":841,"postDate":842,"path":843,"url":794},"Effortless configuration syncing with GNU Stow and Git: A software engineer's workflow","Discover how to manage and sync configuration files across Linux and macOS using GNU Stow and Git. Simplify your workflow with centralized, version-controlled setups.",[809],"2025-01-12T00:00:00.000Z","/blog/effortless-configuration-syncing-with-gnu-stow",{"title":845,"description":846,"tags":847,"postDate":851,"path":852,"url":794},"My 2023 travels: A visual journey","Looking back at the best pictures from my travel adventures in 2023",[848,849,850],"personal","travel","photography","2024-01-01T00:00:00.000Z","/blog/2023-travels-visual-journey",{"title":854,"description":855,"tags":856,"postDate":858,"path":859,"url":794},"Re-living memories through proper media organization","Organizing media such as photos and videos can bring back cherished memories and help relive them. Here's my approach to organizing my digital media collection.",[848,857],"technology","2023-02-06T00:00:00.000Z","/blog/reliving-memories-through-proper-media-organization",{"title":861,"description":862,"tags":863,"postDate":864,"path":865,"url":794},"Looking back: My 2022 in review","From new adventures and memories to lessons learned and personal growth, this year has been a year of discovery. Here's my 2022 in review.",[848,849],"2022-12-31T00:00:00.000Z","/blog/2022-in-review",{"title":867,"description":868,"tags":869,"postDate":871,"path":872,"url":794},"Git and the command-line: Take your workflow to the next level","Some tips on how to improve your Git productivity using the command-line",[870,809],"programming","2022-12-18T00:00:00.000Z","/blog/git-and-command-line-next-level-workflow",{"title":874,"description":875,"tags":876,"postDate":877,"path":878,"url":794},"Hiking Tsho-Rolpa lake trail in Nepal","Details of my hiking journey to the Tsho-Rolpa glacial lake in Nepal 🇳🇵, situated at 4,580m from sea level",[849],"2022-01-22T00:00:00.000Z","/blog/hiking-tsho-rolpa-lake-trail-in-nepal",[880,882,884,886,888,890,892,894,896,898],{"title":5,"description":795,"tags":881,"postDate":801,"path":800,"url":794},[23,143,807,808,809],{"title":815,"description":816,"tags":883,"postDate":821,"path":822,"url":794},[818,819,820],{"title":824,"description":825,"tags":885,"postDate":830,"path":831,"url":794},[827,828,808,829],{"title":833,"description":834,"tags":887,"postDate":836,"path":837,"url":794},[809],{"title":839,"description":840,"tags":889,"postDate":842,"path":843,"url":794},[809],{"title":845,"description":846,"tags":891,"postDate":851,"path":852,"url":794},[848,849,850],{"title":854,"description":855,"tags":893,"postDate":858,"path":859,"url":794},[848,857],{"title":861,"description":862,"tags":895,"postDate":864,"path":865,"url":794},[848,849],{"title":867,"description":868,"tags":897,"postDate":871,"path":872,"url":794},[870,809],{"title":874,"description":875,"tags":899,"postDate":877,"path":878,"url":794},[849],1760899120190]